{"version":3,"sources":["index.js"],"names":["Game","props","state","history","squares","Array","fill","stepNumber","xIsNext","i","this","slice","length","calculateWinner","setState","concat","step","winner","map","move","desc","key","onClick","jumpTo","className","href","target","rel","React","Component","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"gPA8CMA,G,8DACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,QAAS,CACP,CACEC,QAASC,MAAM,GAAGC,KAAK,QAG3BC,WAAY,EACZC,SAAS,GATM,E,wDAaPC,GACV,IAAMN,EAAUO,KAAKR,MAAMC,QAAQQ,MAAM,EAAGD,KAAKR,MAAMK,WAAa,GAE9DH,EADUD,EAAQA,EAAQS,OAAS,GACjBR,QAAQO,QAC5BE,EAAgBT,IAAYA,EAAQK,KAGxCL,EAAQK,GAAKC,KAAKR,MAAMM,QAAU,IAAM,IACxCE,KAAKI,SAAS,CACZX,QAASA,EAAQY,OAAO,CACtB,CACEX,QAASA,KAGbG,WAAYJ,EAAQS,OACpBJ,SAAUE,KAAKR,MAAMM,a,6BAIlBQ,GACLN,KAAKI,SAAS,CACZP,WAAYS,EACZR,QAAUQ,EAAO,IAAO,M,+BAIlB,IAAD,OACDb,EAAUO,KAAKR,MAAMC,QAErBc,EAASJ,EADCV,EAAQO,KAAKR,MAAMK,YACIH,SAEzBD,EAAQe,KAAI,SAACF,EAAMG,GAC/B,IAAMC,EAAOD,EACX,kIAA2BA,EAC3B,mDACF,OACE,wBAAIE,IAAKF,GACP,4BAAQG,QAAS,kBAAM,EAAKC,OAAOJ,KAAQC,OAYjD,OANIH,EACO,2DAAgBA,EAEhB,0FAAsBP,KAAKR,MAAMM,QAAU,IAAM,KAI1D,yBAAKgB,UAAU,OACd,4BAAQA,UAAU,cAEjB,mCACO,4CADP,wBAGA,uBACEA,UAAU,WACVC,KAAK,uBACLC,OAAO,SACPC,IAAI,uBAJN,qB,GAtEWC,IAAMC,YA2GzB,SAAShB,EAAgBT,GAWvB,IAVA,IAAM0B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEArB,EAAI,EAAGA,EAAIqB,EAAMlB,OAAQH,IAAK,CAAC,IAAD,cACnBqB,EAAMrB,GADa,GAC9BsB,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAI7B,EAAQ2B,IAAM3B,EAAQ2B,KAAO3B,EAAQ4B,IAAM5B,EAAQ2B,KAAO3B,EAAQ6B,GACpE,OAAO7B,EAAQ2B,GAGnB,OAAO,KAtCTG,IAASC,OAiBP,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.6e967404.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Basic from './myform'\r\n// import logo from '../public/logo512.png';\r\n// function Square(props) {\r\n//   return (\r\n//     <button className=\"square\" onClick={props.onClick}>\r\n//       {props.value}\r\n//     </button>\r\n//   );\r\n// }\r\n\r\n// class Board extends React.Component {\r\n//   renderSquare(i) {\r\n//     return (\r\n//       <Square\r\n//         value={this.props.squares[i]}\r\n//         onClick={() => this.props.onClick(i)}\r\n//       />\r\n//     );\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <div className=\"board-row\">\r\n//           {this.renderSquare(0)}\r\n//           {this.renderSquare(1)}\r\n//           {this.renderSquare(2)}\r\n//         </div>\r\n//         <div className=\"board-row\">\r\n//           {this.renderSquare(3)}\r\n//           {this.renderSquare(4)}\r\n//           {this.renderSquare(5)}\r\n//         </div>\r\n//         <div className=\"board-row\">\r\n//           {this.renderSquare(6)}\r\n//           {this.renderSquare(7)}\r\n//           {this.renderSquare(8)}\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [\r\n        {\r\n          squares: Array(9).fill(null)\r\n        }\r\n      ],\r\n      stepNumber: 0,\r\n      xIsNext: true\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n    this.setState({\r\n      history: history.concat([\r\n        {\r\n          squares: squares\r\n        }\r\n      ]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ?\r\n        'ย้อนกลับไปยัง ลำดับที่' + move :\r\n        'เริ่มเกม';\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = \"ผู้ชนะคือ: \" + winner;\r\n    } else {\r\n      status = \"ผู้เล่นคนถัดไป: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n       <header className=\"App-header\">\r\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  // <div className=\"App\">\r\n  //     <header className=\"App-header\">\r\n  //       {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\r\n  //       <p>\r\n  //         Edit <code>src/App.js</code> and save to reload.\r\n  //       </p>\r\n  //       <a\r\n  //         className=\"App-link\"\r\n  //         href=\"https://reactjs.org/\"\r\n  //         target=\"_blank\"\r\n  //         rel=\"noopener noreferrer\"\r\n  //       >\r\n  //         Learn React\r\n  //       </a>\r\n  //     </header>\r\n  //   </div>,\r\n  <Game/>,\r\ndocument.getElementById('root')\r\n);\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n"],"sourceRoot":""}